@page "/home"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<PageTitle>Home - SmartBalance</PageTitle>

<div class="home-container">
    <div class="welcome-section">
        <h3>Welcome back, @username!</h3>
        <p class="subtitle">Manage your finances effectively</p>
    </div>

    <div class="stats-container">
        <div class="stat-card">
            <div class="stat-value">@monthlyIncome.ToString("C")</div>
            <div class="stat-label">Monthly Income</div>
        </div>

        <div class="stat-card">
            <div class="stat-value" style="@(TotalBalance < 0 ? "color: #d32f2f;" : "color: #3f51b5;")">
                @TotalBalance.ToString("C")
            </div>
            <div class="stat-label">Remaining Balance</div>
        </div>
    </div>

    <div class="quick-actions">
        <button class="action-button" @onclick="NavigateToExpenses">
            <span class="icon">📊</span>
            <span>View Expenses</span>
        </button>

        <button class="action-button" @onclick="NavigateToAddExpense">
            <span class="icon">➕</span>
            <span>Add Expense</span>
        </button>
    </div>

    <div class="recent-activity">
        <h4>Recent Activity</h4>
        @if (recentExpenses.Any())
        {
            <ul class="activity-list">
                @foreach (var expense in recentExpenses)
                {
                    <li class="activity-item">
                        <span class="expense-amount @(expense.Amount > 0 ? "income" : "expense")">
                            @expense.Amount.ToString("C")
                        </span>
                        <span class="expense-description">@expense.Description</span>
                        <span class="expense-date">@expense.Date.ToString("MMM dd")</span>
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="no-activity">No recent expenses found</p>
        }
    </div>
</div>

@code {
    private string username = "User";
    private decimal monthlyIncome = 3500.00m;
    private List<Expense> recentExpenses = new List<Expense>();

    private decimal TotalBalance => monthlyIncome - recentExpenses.Sum(e => e.Amount);

    protected override async Task OnInitializedAsync()
    {
        // Simulate loading user data
        username = "John Doe";

        // Sample recent expenses
        recentExpenses = new List<Expense>
        {
            new Expense { Description = "Groceries", Amount = -125.50m, Date = DateTime.Now.AddDays(-1) },
            new Expense { Description = "Electric Bill", Amount = -85.00m, Date = DateTime.Now.AddDays(-3) },
            new Expense { Description = "Freelance Work", Amount = 250.00m, Date = DateTime.Now.AddDays(-5) },
            new Expense { Description = "Dinner Out", Amount = -45.75m, Date = DateTime.Now.AddDays(-7) }
        };
    }

    private void NavigateToExpenses()
    {
        // Navigation.NavigateTo("/expenses");
    }

    private void NavigateToAddExpense()
    {
        // Navigation.NavigateTo("/addexpense");
    }

    private class Expense
    {
        public string Description { get; set; } = string.Empty;
        public decimal Amount { get; set; }
        public DateTime Date { get; set; }
    }
}

<style>
    .home-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }

    .welcome-section {
        text-align: center;
        margin-bottom: 30px;
    }

        .welcome-section h3 {
            font-size: 1.8rem;
            color: #3f51b5;
            margin-bottom: 5px;
        }

    .subtitle {
        color: #666;
        font-size: 1.1rem;
    }

    .stats-container {
        display: flex;
        justify-content: space-around;
        margin: 30px 0;
    }

    .stat-card {
        background: white;
        border-radius: 10px;
        padding: 20px;
        width: 45%;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        text-align: center;
    }

    .stat-value {
        font-size: 1.8rem;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .stat-label {
        color: #666;
        font-size: 0.9rem;
    }

    .quick-actions {
        display: flex;
        justify-content: space-around;
        margin: 30px 0;
    }

    .action-button {
        background: #3f51b5;
        color: white;
        border: none;
        border-radius: 8px;
        padding: 15px 20px;
        font-size: 1rem;
        cursor: pointer;
        display: flex;
        align-items: center;
        transition: background 0.3s;
    }

        .action-button:hover {
            background: #303f9f;
        }

        .action-button .icon {
            margin-right: 10px;
            font-size: 1.2rem;
        }

    .recent-activity {
        background: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

        .recent-activity h4 {
            margin-top: 0;
            color: #3f51b5;
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
        }

    .activity-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .activity-item {
        display: flex;
        justify-content: space-between;
        padding: 10px 0;
        border-bottom: 1px solid #f5f5f5;
    }

    .expense-amount {
        font-weight: bold;
        width: 100px;
        text-align: right;
    }

        .expense-amount.income {
            color: #4caf50;
        }

        .expense-amount.expense {
            color: #d32f2f;
        }

    .expense-description {
        flex-grow: 1;
        padding: 0 15px;
    }

    .expense-date {
        color: #666;
        width: 70px;
        text-align: right;
    }

    .no-activity {
        color: #666;
        text-align: center;
        padding: 20px 0;
    }
</style>